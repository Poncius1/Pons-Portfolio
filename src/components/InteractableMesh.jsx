/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useLayoutEffect, useRef } from "react";
import * as THREE from 'three';
import { useGLTF, useTexture} from "@react-three/drei";
import {useThree} from "@react-three/fiber";
import gsap from "gsap/all";

export function InteractableMesh(props) {
  const { nodes, materials } = useGLTF("/models/AssetsRoom.gltf");
  
   //ArcadeTexture
   const arcadeTexture = useTexture("/texture/Arcade.png")
   arcadeTexture.flipY = false;
   arcadeTexture.encoding = THREE.sRGBEncoding
   
   
   const glassMaterial = new THREE.MeshPhysicalMaterial({
    color: '#717482',
    transparent: true,
    opacity: 0.5,
    roughness: 0.0,
    metalness: 0.5,
    clearcoat: 1,
    ior: .25,
    clearcoatRoughness: 0.1,
   })

   //Change Materials 
  materials.Arcade.map = arcadeTexture
  



  const {camera} = useThree();
  console.log(camera.rotation);
  const timeline = gsap.timeline();

  const Arcade = () =>{
    timeline.to(camera.position,{
        x:60,
        y: 110,
        z: -20
    });
    
  }

  return (
    <group {...props} dispose={null}>
      
      <mesh onClick={Arcade}
        castShadow
        receiveShadow
        geometry={nodes.Arcade.geometry}
        material={materials.Arcade}
      />
      
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cristal_Pecera_G.geometry}
        material={glassMaterial}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cristal_Pud.geometry}
        material={glassMaterial}
      />
      
    </group>
  ); 
}


useGLTF.preload("/models/AssetsRoom.gltf");
