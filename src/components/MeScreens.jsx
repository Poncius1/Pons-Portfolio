/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {  useState } from "react";
import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { VideoTexture } from "three";
import url from "/videos/Deportes.mp4";

export function MeScreens(props) {
  const { nodes, materials } = useGLTF("/models/Me_Screens.gltf");

  const [video] = useState(() => {
    const vid = document.createElement("video");
    vid.src = url;
    vid.crossOrigin = "Anonymous";
    vid.loop = true;
    vid.muted = true;
    vid.play();
    return vid;
  });
  const videoTexture = new VideoTexture(video);
  videoTexture.flipY = false
  const videoMaterial = new THREE.MeshBasicMaterial({
   
    map: videoTexture,
    side: THREE.DoubleSide,
  });

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Pantalla_Centro.geometry}
        material={videoMaterial}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Pantalla_Izquierda.geometry}
        material={videoMaterial}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Pantalla_Derecha.geometry}
        material={videoMaterial}
      />
      
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Pantalla_Vertical.geometry}
        material={videoMaterial}
      />
    </group>
  );
}

useGLTF.preload("/models/Me_Screens.gltf");