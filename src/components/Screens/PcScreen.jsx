/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF,Html } from "@react-three/drei";
import { useThree} from "@react-three/fiber";
import gsap from "gsap/all";
import DesktopPage from "../DesktopPage";

export function PcScreen(props) {
  const { nodes, materials } = useGLTF("/models/PcScreen.gltf");
  
  
  const {camera} = useThree();
  const controls = useThree((state) => state.controls)
  const timeline = gsap.timeline({
    defaults:{
      ease:"circ.out",
      duration: 5
    },
  });


 
  const BackButton = () =>{
    controls.enableRotate = true
    timeline.to(controls.target,{
      x:0,
      y:50,
      z:0
    })
    timeline.to(camera.position,{
      x: 122, 
      y: 76,
      z: 124,
    
    },">-5");
  
  }



  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        //geometry={nodes.PcScreen.geometry}
        //material={materials["Screen.001"]}
      >  
      <Html 
       className="pc-screen"
        position={[-74.5,103.5,-43.8]}
        rotation={[0.,1.57,0]}
        transform
        occlude
      >
        <DesktopPage/>
          <button onClick={BackButton}>BACK</button>
      </Html>

      </mesh>
    </group>
  ); 
}

useGLTF.preload("/models/PcScreen.gltf");
