/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import {useFrame, useThree} from "@react-three/fiber";
import gsap from "gsap/all";
import HolographicMaterial from "./HolographicMaterial";

export function Interactables(props) {
  const { nodes, materials } = useGLTF("/models/ps5.gltf");

  const {camera} = useThree();
  const controls = useThree((state) => state.controls)
  const timeline = gsap.timeline();
   console.log(camera.position) 
   console.log(camera.rotation)    
   //controls.enabled = true
  const Arcade = () =>{
        controls.enabled = false
        timeline.to(camera.rotation,{
            x: Math.PI *  -0.043961,
            y: 0,
            z: 0

        })
        timeline.to(camera.position,{
            x: 64,
            y: 100,
            z: -37,
        });
        
    }
    const ps5ref = useRef();

    useFrame((state,delta)=> {
        ps5ref.current.rotation.y += 0.005
       


    });

  return (
    <group {...props} dispose={null}>
      <mesh ref={ps5ref}
      castShadow
      receiveShadow
      onClick={Arcade}
      geometry={nodes.Controller.geometry}
      material={materials.Material}
      position={[63.45, 120.123, -53.995]}
      >
        <HolographicMaterial
        fresnelAmount ={0.18}/>
      </mesh>
        
      
    </group>
  );
}

useGLTF.preload("/models/ps5.gltf");
